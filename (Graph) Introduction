Adjacecny list and matrix can be used to represent a graph.
Adjacency matrix is good used o(1) for creating an edgeand removing but used V^2 space.

Adjacency list used a LinkedList Array. and the implemetation is shown below.



import java.util.LinkedList;
public class paras 
{
    static class Graph
    {
      int vertices;
      LinkedList<Integer> adjacencyList[]; 
      Graph(int V)
      {
          vertices=V;
          adjacencyList=new LinkedList[V]; // remember the syntax
          
          
          for(int i=0; i<V; i++)
          adjacencyList[i]=new LinkedList<Integer>();
      }
    }
      
      static void addEdge(Graph graph, int src, int dest) 
      {
          graph.adjacencyList[src].add(dest);
          graph.adjacencyList[dest].add(src);
      }
      
      static void printGraph(Graph obj)
      {
          for(int i=0; i<obj.vertices; i++)
          {
              System.out.println("Adjacency list of vertex "+ i);
              System.out.print(" head");
              for(int x: obj.adjacencyList[i])
              System.out.print("  -->  "+x);
              System.out.println("\n");
          }
      }
      
    public static void main(String args[]) 
    { 
        // create the graph given in above figure 
        int V = 5; 
        Graph graph = new Graph(V); 
        addEdge(graph, 0, 1); 
        addEdge(graph, 0, 4); 
        addEdge(graph, 1, 2); 
        addEdge(graph, 1, 3); 
        addEdge(graph, 1, 4); 
        addEdge(graph, 2, 3); 
        addEdge(graph, 3, 4); 
       
        printGraph(graph); 
    }
}
