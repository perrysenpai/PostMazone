boolean isBalanced(Node root)
{
        if(root==null)
        return true;
        
        int left=height(node.left);
        int right=height(node.right);
        
        if(Math.abs(left-right)<=1)
        return true & isBalanced(left) & isBalanced(right);
        
        return false;
}


Complexity is O(n^2) in case of skewed.


int isBalanced(Node root)
{
          if(root==null)
          return 0;
          
          int left=isBalanced(root.left);
          int right=isBalanced(root.right);
          
          if(left!=-1 && right!=-1 && Math.abs(left-right)<=1)
          return  1+Math.abs(left, right);
          
          return -1;  //  -1 is returned if tree is not balanceed
          
          
 }
