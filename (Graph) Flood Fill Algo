Problem: Given a 2D screen, location of a pixel in the screen ie(x,y) and a color(K), your task is to replace 
color of the given pixel and all adjacent(excluding diagonally adjacent) same colored pixels with the given color K.

{{1, 1, 1, 1, 1, 1, 1, 1},
{1, 1, 1, 1, 1, 1, 0, 0},
{1, 0, 0, 1, 1, 0, 1, 1},
{1, 2, 2, 2, 2, 0, 1, 0},
{1, 1, 1, 2, 2, 0, 1, 0},
{1, 1, 1, 2, 2, 2, 2, 0},
{1, 1, 1, 1, 1, 2, 1, 1},
{1, 1, 1, 1, 1, 2, 2, 1},
 };

 x=4, y=4, newcolor=3 

{{1, 1, 1, 1, 1, 1, 1, 1},
{1, 1, 1, 1, 1, 1, 0, 0},
{1, 0, 0, 1, 1, 0, 1, 1}, 
{1, 3, 3, 3, 3, 0, 1, 0},
{1, 1, 1, 3, 3, 0, 1, 0},
{1, 1, 1, 3, 3, 3, 3, 0},
{1, 1, 1, 1, 1, 3, 1, 1},
{1, 1, 1, 1, 1, 3, 3, 1}, };


Approach: find ar[x][y]
          replace it with newcolor.
          replace index up, down, left, right using recursive algorithm.
          
          
public static void main (String[] args)
	 {
	 Scanner scan=new Scanner(System.in);
	 int cases=scan.nextInt();
	 while(cases-->0)
	 {
	    int row=scan.nextInt();
	    int col=scan.nextInt();
	    
	    int ar[][]=new int[row][col];
	    for(int i=0; i<row; i++)
	    for(int j=0; j<col; j++)
	    ar[i][j]=scan.nextInt();
	    
	    int i=scan.nextInt();
	    int j=scan.nextInt();
	    
	    int color=ar[i][j];
	    int newColor=scan.nextInt();
	    
	    fill(ar, row, col, i, j, color, newColor);
	    
	    for(int x[]: ar)
	    for(int y: x)
	    System.out.print(y+" ");
	    System.out.println();
	    
	 }
	 }
	 
	 public static void fill(int ar[][], int row, int col ,int i, int j, int color, int newColor)
	 {
	     if(i<0 || j<0 || i>=row ||j>=col )
	     return ;
	     
	     if(ar[i][j]!=color)
	     return;
	     
	     ar[i][j]=newColor;
	     
	     fill(ar, row, col, i+1, j, color, newColor);
	     fill(ar, row, col, i, j+1, color, newColor);
	     fill(ar, row, col, i-1, j, color, newColor);
	     fill(ar, row, col, i, j-1, color, newColor);
	    
	 }
}
